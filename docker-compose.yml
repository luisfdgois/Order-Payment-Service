version: '3.4'

services: 

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3-management
        ports:
            - "15672:15672" 
            - "5672:5672"
            - "25676:25676"

    db-orderservice:
        container_name: db-orderservice
        image: postgres:latest
        ports: 
            - "5432:5432"
        environment:
            POSTGRES_DB: OrderServiceDB
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: passPostgres1997
        volumes:
            - "db-orderservice:/var/lib/postgresql/data"

    api:
        container_name: api-orderservice
        image: ${DOCKER_REGISTRY-}api
        ports: 
            - "44335:80"
        build: 
            context: OrderService
            dockerfile: API/Dockerfile
        restart: always
        depends_on: 
            - db-orderservice
            - rabbitmq
        environment: 
            ASPNETCORE_ENVIRONMENT: Development
            DBServer: "db-orderservice"
            DBPort: "5432"
            DBUser: "postgres"
            DBPassword: "passPostgres1997"
            DataBase: "OrderServiceDB"
        command: ["dotnet", "ef", "database update"]

    worker-creditcard: 
        container_name: worker-creditcard
        image: ${DOCKER_REGISTRY-}creditcard
        build: 
            context: CreditCard
            dockerfile: CreditCard/Dockerfile
        restart: always
        environment: 
            DOTNET_ENVIRONMENT: Development
        depends_on: 
            - rabbitmq

volumes:
    db-orderservice: